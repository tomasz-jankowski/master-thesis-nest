extends ../base

prepend config
    - var indexPage = true;

append content
    section.content
        .container-fluid
            .row
                .col-lg-3.col-6
                    a(href='stations')
                        .small-box.bg-success
                            .inner
                                h3= stations.filter(station => station.isActive).length
                                p Aktywnych stacji pomiarowych
                            .icon
                                i.flaticon-drone
                .col-lg-3.col-6
                    a(href='stations')
                        .small-box.bg-olive
                            .inner
                                h3= stations.filter(station => station.isRegistered).length
                                p Zarejestrowanych stacji pomiarowych
                            .icon
                                i.flaticon-drone
                .col-lg-3.col-6
                    a(href='measurements')
                        .small-box.bg-info
                            .inner
                                h3= measurements.length
                                p Pomiarów
                            .icon
                                i.flaticon-data
                .col-lg-3.col-6
                    a(href='users')
                        .small-box.bg-warning
                            .inner
                                h3= users.filter(user => user.isVerified).length
                                p Zweryfikowanych użytkowników
                            .icon
                                i.flaticon-user
                .row
                    if stations.filter(station => station.isRegistered && !station.isActive).length > 0
                        .card.m-3
                            .card-header.border-transparent
                                h3.card-title Nieaktywne stacje pomiarowe
                            .card-body
                                .table-responsive
                                    .table
                                        table
                                            thead
                                                tr
                                                    th ID
                                                    th Numer stacji
                                                    th Liczba pomiarów
                                                    th Akcja
                                            tbody
                                              each station in stations.filter(station => station.isRegistered && !station.isActive)
                                                  tr(id=`stationActivate${station.id}`)
                                                    td= station.id
                                                    td= station.number
                                                    td= station.measurements.length
                                                    td
                                                        button.btn.btn-sm.btn-outline-success.mr-1(onclick=`activate(${station.id});return false;`) Aktywuj
                .row
                    if stations.filter(station => !station.isRegistered).length > 0
                        .card.m-3
                            .card-header.border-transparent
                                h3.card-title Stacje pomiarowe czekające na rejestrację
                            .card-body
                                .table-responsive
                                    .table
                                        table
                                            thead
                                                tr
                                                    th ID
                                                    th Numer stacji
                                                    th Liczba pomiarów
                                                    th Akcja
                                            tbody
                                                each station in stations.filter(station => !station.isRegistered)
                                                    tr(id=`stationRegister${station.id}`)
                                                        td= station.id
                                                        td= station.number
                                                        td= station.measurements.length
                                                        td
                                                            button.btn.btn-sm.btn-outline-success.mr-1(onclick=`register(${station.id});return false;`) Zarejestruj
                                                            button.btn.btn-sm.btn-outline-danger.ml-1(onclick=`deleteStation(${station.id});return false;`) Usuń
                    if users.filter(user => !user.isVerified).length > 0
                        .card.m-3
                            .card-header.border-transparent
                                h3.card-title Użytkownicy czekający na weryfikację
                            .card-body
                                .table-responsive
                                    .table
                                        table
                                            thead
                                                tr
                                                    th ID
                                                    th Imię i nazwisko
                                                    th Login
                                                    th Akcja
                                            tbody
                                              each user in users.filter(user => !user.isVerified)
                                                  tr(id=`user${user.id}`)
                                                      td= user.id
                                                      td= user.name
                                                      td= user.login
                                                      td
                                                          button.btn.btn-sm.btn-outline-success.mr-1(onclick=`verify(${user.id});return false;`) Zweryfikuj
                                                          button.btn.btn-sm.btn-outline-danger.ml-1(onclick=`deleteUser(${user.id});return false;`) Usuń

append body-files
    script(src='/js/toastr.min.js')
    script.
        function activate(id) {
          $.ajax({
            type: 'PATCH',
            url: '/powietrze/api/stations/' + id,
            data: { isActive: true },
            success: () => {
              $(`#stationActivate${id}`).remove();
              toastr.success('Pomyślnie oznaczono stację jako aktywną. Odśwież, by zobaczyć zmiany.');
            },
            error: () => {
              toastr.error('Wystąpił błąd.');
            }
          })
        }

        function register(id) {
          $.ajax({
            type: 'PATCH',
            url: '/powietrze/api/stations/' + id,
            data: { isRegistered: true },
            success: () => {
              $(`#stationRegister${id}`).remove();
              toastr.success('Pomyślnie zarejestrowano stację. Odśwież, by zobaczyć zmiany.');
            },
            error: () => {
              toastr.error('Wystąpił błąd.');
            }
          })
        }

        function verify(id) {
          $.ajax({
            type: 'PATCH',
            url: '/powietrze/api/users/' + id,
            data: { isVerified: true },
            success: () => {
              $(`#user${id}`).remove();
              toastr.success('Pomyślnie zweryfikowano użytkownika. Odśwież, by zobaczyć zmiany.');
            },
            error: () => {
              toastr.error('Wystąpił błąd.');
            }
          })
        }

        function deleteStation(id) {
          if (confirm('Czy na pewno usunąć stację wraz ze wszystkimi pomiarami?')) {
            $.ajax({
              type: 'DELETE',
              url: '/powietrze/api/stations/' + id,
              success: () => {
                $(`#stationActivate${id}`).remove();
                $(`#stationRegister${id}`).remove();
                toastr.success('Pomyślnie usunięto stację. Odśwież, by zobaczyć zmiany.');
              },
              error: () => {
                toastr.error('Wystąpił błąd.');
              }
            })
          }
        }

        function deleteUser(id) {
          if (confirm('Czy na pewno usunąć użytkownika?')) {
            $.ajax({
              type: 'DELETE',
              url: '/powietrze/api/users/' + id,
              success: () => {
                $(`#user${id}`).remove();
                toastr.success('Pomyślnie usunięto użytkownika. Odśwież, by zobaczyć zmiany.');
              },
              error: () => {
                toastr.error('Wystąpił błąd.');
              }
            })
          }
        }