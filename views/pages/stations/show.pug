extends ../../base

append head-files
    include includes/css

prepend config
  - var stationsPage = true;

append content
    section.content
        .container-fluid
            h5 ID stacji:
                span.ml-1= station.id
            h5 Numer stacji:
                span.ml-1= station.number
            if station.uniqueName
                h5 Nazwa stacji:
                    span.ml-1= station.uniqueName
            if station.measurements.length === 0
              h5.text-danger Brak pomiarów do wyświetlenia.
            else
                h5 Liczba pomiarów:
                    spna.ml-1= station.measurements.length
                .row
                    .col.card.bg-lightblue
                        .card-header
                            h5 Wybierz serię pomiarową
                        .card-body
                            form(method='get', action=`/stations/${station.id}/series`)
                                select.form-control(name='series')
                                    - var series = [...new Set(station.measurements.map(item => `${item.series} (${item.date.toLocaleDateString()})`))];
                                    each s in series
                                        if chosenSeries && s == `${chosenSeries[0].series} (${chosenSeries[0].date.toLocaleDateString()})`
                                            option(value=s selected)= s
                                        else
                                            option(value=s)= s
                                button.btn.btn-light.mt-1 Zatwierdź
                if chosenSeries
                    .row
                        .col.card.bg-light
                            .card-body
                                #table-wrapper
                                    table.table.table-bordered.table-striped.table-head-fixed.text-center.text-nowrap

append body-files
    script(src='/js/moment-with-locales.js')
    script(src='/js/jquery.dataTables.min.js')
    script(src='/js/dataTables.bootstrap4.min.js')
    script(src='/js/dataTables.buttons.min.js')
    script(src='/js/buttons.bootstrap4.min.js')
    script(src='/js/jszip.min.js')
    script(src='/js/pdfmake.min.js')
    script(src='/js/vfs_fonts.js')
    script(src='/js/buttons.html5.min.js')
    script(src='/js/buttons.print.min.js')
    script(src='/js/buttons.colVis.min.js')
    script(src='/js/dataTables.fixedColumns.min.js')
    script(src='/js/dataTables.responsive.min.js')
    script(src='/js/responsive.bootstrap4.min.js')
    script(src='/js/dataTables.searchBuilder.min.js')
    script(src='/js/searchBuilder.bootstrap4.min.js')
    script(src='/js/dataTables.select.min.js')
    script(src='/js/dataTables.dateTime.min.js')
    script(src='/js/datetime-moment.js')
    script(src='/js/jquery.serializejson.js')
    script.
      $(document).ready(function() {
        $.fn.dataTable.moment('DD.MM.YYYY');
        $.fn.dataTable.moment('HH:mm:ss');

        const options = {
          dom: 'QBlfrtip',
          language: {
            url: '/js/pl.json'
          },
          select: true,
          scrollX: true,
          scroller: true,
          aLengthMenu: [
            [10, 25, 50, 100, 200, 500, -1],
            [10, 25, 50, 100, 200, 500, '∞'],
          ],
          fixedColumns: { left: 1 },
          fixedHeader: true,
          buttons: [
            {
              extend: 'copy',
              exportOptions: {
                columns: ':not(:first-child)'
              }
            },
            {
              extend: 'csv',
              exportOptions: {
                columns: ':not(:first-child)'
              }
            },
            {
              extend: 'print',
              exportOptions: {
                columns: ':not(:first-child)'
              }
            },
            'colvis',
            {
              text: 'Usuń zaznaczone',
              action: () => {
                const selectedRows = table.rows({ selected: true });
                const rows = selectedRows.nodes();
                const count = selectedRows.count();
                const data = selectedRows.data();
                if (count > 0) {
                  if (confirm(`Czy na pewno usunąć ${count} pomiarów? \r\nSpowoduje to odświeżenie strony i usunięcie fitrów!`)) {
                    for (let i = 0; i < count; i++) {
                      $.ajax({
                        type: 'DELETE',
                        url: `/api/measurements/${data[i].id}`
                      })
                    }
                    window.location.href = '/measurements';
                  }
                }
              }
            }]
        };

        let data = JSON.parse('!{JSON.stringify(chosenSeries)}');

        for (let d of data) {
          d.isoDate = d.date;
          d.time = new Date(d.date).toLocaleTimeString();
          d.date = new Date(d.date).toLocaleDateString();
          d.pump = (d.pump === true) ? 'tak' : 'nie';
        }

        const table = $('table').DataTable({
          data,
          columns: [
            {
              data: 'id',
              title: 'Akcja',
              render: () =>
                '<button class="btn btm-sm btn-outline-warning">Edytuj</button>'
            },
            { data: 'id', title: 'ID' },
            { data: 'series', title: 'Seria' },
            { data: 'number', title: 'Numer' },
            { data: 'isoDate', title: 'Data ISO 8601', visible: false },
            { data: 'date', title: 'Data' },
            { data: 'time', title: 'Czas' },
            { data: 'latitude', title: 'Szerokość geograficzna' },
            { data: 'longitude', title: 'Długość geograficzna' },
            { data: 'altitude', title: 'Wysokość bezwzględna' },
            { data: 'batteryVoltage', title: 'Napięcie baterii [V]' },
            { data: 'pump', title: 'Pompa' },
            { data: 'pm1', title: 'PM1 [µg/m3]' },
            { data: 'pm25', title: 'PM2.5 [µg/m3]' },
            { data: 'pm10', title: 'PM10 [µg/m3]' },
            { data: 'quantity03', title: 'L. dz. cz. > 0,3 µm/0,1 l' },
            { data: 'quantity05', title: 'L. dz. cz. > 0,5 µm/0,1 l' },
            { data: 'quantity1', title: 'L. dz. cz. > 1 µm/0,1 l' },
            { data: 'quantity25', title: 'L. dz. cz. > 2,5 µm/0,1 l' },
            { data: 'quantity5', title: 'L. dz. cz. > 5 µm/0,1 l' },
            { data: 'quantity10', title: 'L. dz. cz. > 10 µm/0,1 l' },
            { data: 'hcho', title: 'HCHO [mg/m3]' },
            { data: 'temperature', title: 'Temperatura [℃]' },
            { data: 'humidity', title: 'Wilgotność [%]' },
            { data: 'quantityCO2', title: 'L. cz. CO2 [ppm]' },
            { data: 'quantityTVOC', title: 'L. cz. TVOC [ppb]' },
            { data: 'updatedAt', title: 'Zmodyfikowano' },
            { data: 'createdAt', title: 'Utworzono' },
          ],
          ...options,
        });

        table.buttons().container().appendTo($('.col-sm-6:eq(0)', table.table().container()));

        $('table tbody').on('click', 'button', function() {
          const data = table.row($(this).parents('tr')).data();
          window.location.href = `/measurements/${data.id}/edit`;
        });
      });